[package]
name = "svix-bridge"
version = "1.32.0"
edition = "2021"
publish = false

[dependencies]
anyhow = "1"
base64 = "0.13.1"
clap = { version = "4.2.4", features = ["env", "derive"] }
axum = { version = "0.6", features = ["macros"] }
enum_dispatch = "0.3"
itertools = "0.12.1"
http = "0.2"
once_cell = "1.18.0"
opentelemetry = "0.22.0"
opentelemetry_sdk = { version = "0.22.1", features = ["metrics", "rt-tokio"] }
opentelemetry-otlp = { version = "0.15.0", features = ["metrics", "grpc-tonic", "http-proto", "reqwest-client"] }
serde.workspace = true
serde_json.workspace = true
serde_yaml = "0.9"
svix-ksuid = "0.7.0"
svix-bridge-plugin-queue = { path = "../svix-bridge-plugin-queue" }
svix-bridge-plugin-kafka = { optional = true, path = "../svix-bridge-plugin-kafka" }
svix-bridge-types.workspace = true
tokio.workspace = true
tracing.workspace = true
tracing-opentelemetry = "0.23.0"
tracing-subscriber = { workspace = true, features = ["fmt", "json"] }
# N.b. for newer deno versions (like this) the runtimes must be retained and reused since they will leak memory if you
# create/drop them.
deno_core = "0.204.0"
deno_ast = "0.28.0"
deadpool = { version = "0.9.5", features = ["unmanaged", "rt_tokio_1"] }
shellexpand = { version = "3.1.0", default-features = false, features = ["base-0"] }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { version = "0.5", optional = true }
tikv-jemalloc-ctl = { version = "0.5", optional = true, features = ["use_std"] }

[dev-dependencies]
chrono = "0.4"
tower = "0.4"

[features]
default = ["kafka", "jemalloc"]
kafka = ["dep:svix-bridge-plugin-kafka"]
jemalloc = ["tikv-jemallocator", "tikv-jemalloc-ctl"]

[lints]
workspace = true
