/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Svix.Client.FileParameter;
using OpenAPIDateConverter = Svix.Client.OpenAPIDateConverter;

namespace Svix.Model
{
    /// <summary>
    /// Configuration for a Google Cloud BigQuery sink.
    /// </summary>
    [DataContract(Name = "BigQueryConfig")]
    public partial class BigQueryConfig : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BigQueryConfig" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BigQueryConfig() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BigQueryConfig" /> class.
        /// </summary>
        /// <param name="credentials">Google Cloud Credentials JSON Object as a string. (required).</param>
        /// <param name="datasetId">datasetId (required).</param>
        /// <param name="projectId">projectId (required).</param>
        /// <param name="tableId">tableId (required).</param>
        public BigQueryConfig(string credentials = default(string), string datasetId = default(string), string projectId = default(string), string tableId = default(string))
        {
            // to ensure "credentials" is required (not null)
            if (credentials == null)
            {
                throw new ArgumentNullException("credentials is a required property for BigQueryConfig and cannot be null");
            }
            this.Credentials = credentials;
            // to ensure "datasetId" is required (not null)
            if (datasetId == null)
            {
                throw new ArgumentNullException("datasetId is a required property for BigQueryConfig and cannot be null");
            }
            this.DatasetId = datasetId;
            // to ensure "projectId" is required (not null)
            if (projectId == null)
            {
                throw new ArgumentNullException("projectId is a required property for BigQueryConfig and cannot be null");
            }
            this.ProjectId = projectId;
            // to ensure "tableId" is required (not null)
            if (tableId == null)
            {
                throw new ArgumentNullException("tableId is a required property for BigQueryConfig and cannot be null");
            }
            this.TableId = tableId;
        }

        /// <summary>
        /// Google Cloud Credentials JSON Object as a string.
        /// </summary>
        /// <value>Google Cloud Credentials JSON Object as a string.</value>
        [DataMember(Name = "credentials", IsRequired = true, EmitDefaultValue = true)]
        public string Credentials { get; set; }

        /// <summary>
        /// Gets or Sets DatasetId
        /// </summary>
        [DataMember(Name = "datasetId", IsRequired = true, EmitDefaultValue = true)]
        public string DatasetId { get; set; }

        /// <summary>
        /// Gets or Sets ProjectId
        /// </summary>
        [DataMember(Name = "projectId", IsRequired = true, EmitDefaultValue = true)]
        public string ProjectId { get; set; }

        /// <summary>
        /// Gets or Sets TableId
        /// </summary>
        [DataMember(Name = "tableId", IsRequired = true, EmitDefaultValue = true)]
        public string TableId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BigQueryConfig {\n");
            sb.Append("  Credentials: ").Append(Credentials).Append("\n");
            sb.Append("  DatasetId: ").Append(DatasetId).Append("\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  TableId: ").Append(TableId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
