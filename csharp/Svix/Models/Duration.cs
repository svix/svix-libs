/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Svix.Client.FileParameter;
using OpenAPIDateConverter = Svix.Client.OpenAPIDateConverter;

namespace Svix.Model
{
    /// <summary>
    /// Duration
    /// </summary>
    [DataContract(Name = "Duration")]
    public partial class Duration : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Duration" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Duration() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Duration" /> class.
        /// </summary>
        /// <param name="nanos">nanos (required).</param>
        /// <param name="secs">secs (required).</param>
        public Duration(int nanos = default(int), int secs = default(int))
        {
            this.Nanos = nanos;
            this.Secs = secs;
        }

        /// <summary>
        /// Gets or Sets Nanos
        /// </summary>
        [DataMember(Name = "nanos", IsRequired = true, EmitDefaultValue = true)]
        public int Nanos { get; set; }

        /// <summary>
        /// Gets or Sets Secs
        /// </summary>
        [DataMember(Name = "secs", IsRequired = true, EmitDefaultValue = true)]
        public int Secs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Duration {\n");
            sb.Append("  Nanos: ").Append(Nanos).Append("\n");
            sb.Append("  Secs: ").Append(Secs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Nanos (int) minimum
            if (this.Nanos < (int)0)
            {
                yield return new ValidationResult("Invalid value for Nanos, must be a value greater than or equal to 0.", new [] { "Nanos" });
            }

            // Secs (int) minimum
            if (this.Secs < (int)0)
            {
                yield return new ValidationResult("Invalid value for Secs, must be a value greater than or equal to 0.", new [] { "Secs" });
            }

            yield break;
        }
    }

}
