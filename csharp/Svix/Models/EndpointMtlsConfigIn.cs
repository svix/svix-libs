/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Svix.Client.FileParameter;
using OpenAPIDateConverter = Svix.Client.OpenAPIDateConverter;

namespace Svix.Model
{
    /// <summary>
    /// EndpointMtlsConfigIn
    /// </summary>
    [DataContract(Name = "EndpointMtlsConfigIn")]
    public partial class EndpointMtlsConfigIn : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EndpointMtlsConfigIn" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EndpointMtlsConfigIn() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EndpointMtlsConfigIn" /> class.
        /// </summary>
        /// <param name="identity">A PEM encoded private key and X509 certificate to identify the webhook sender. (required).</param>
        /// <param name="serverCaCert">A PEM encoded X509 certificate used to verify the webhook receiver&#39;s certificate..</param>
        public EndpointMtlsConfigIn(string identity = default(string), string serverCaCert = default(string))
        {
            // to ensure "identity" is required (not null)
            if (identity == null)
            {
                throw new ArgumentNullException("identity is a required property for EndpointMtlsConfigIn and cannot be null");
            }
            this.Identity = identity;
            this.ServerCaCert = serverCaCert;
        }

        /// <summary>
        /// A PEM encoded private key and X509 certificate to identify the webhook sender.
        /// </summary>
        /// <value>A PEM encoded private key and X509 certificate to identify the webhook sender.</value>
        [DataMember(Name = "identity", IsRequired = true, EmitDefaultValue = true)]
        public string Identity { get; set; }

        /// <summary>
        /// A PEM encoded X509 certificate used to verify the webhook receiver&#39;s certificate.
        /// </summary>
        /// <value>A PEM encoded X509 certificate used to verify the webhook receiver&#39;s certificate.</value>
        [DataMember(Name = "serverCaCert", EmitDefaultValue = true)]
        public string ServerCaCert { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EndpointMtlsConfigIn {\n");
            sb.Append("  Identity: ").Append(Identity).Append("\n");
            sb.Append("  ServerCaCert: ").Append(ServerCaCert).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
