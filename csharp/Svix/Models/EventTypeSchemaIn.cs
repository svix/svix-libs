/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Svix.Client.FileParameter;
using OpenAPIDateConverter = Svix.Client.OpenAPIDateConverter;

namespace Svix.Model
{
    /// <summary>
    /// EventTypeSchemaIn
    /// </summary>
    [DataContract(Name = "EventTypeSchemaIn")]
    public partial class EventTypeSchemaIn : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EventTypeSchemaIn" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EventTypeSchemaIn() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EventTypeSchemaIn" /> class.
        /// </summary>
        /// <param name="schema">schema (required).</param>
        public EventTypeSchemaIn(Object schema = default(Object))
        {
            // to ensure "schema" is required (not null)
            if (schema == null)
            {
                throw new ArgumentNullException("schema is a required property for EventTypeSchemaIn and cannot be null");
            }
            this.Schema = schema;
        }

        /// <summary>
        /// Gets or Sets Schema
        /// </summary>
        /*
        <example>{&quot;description&quot;:&quot;An invoice was paid by a user&quot;,&quot;properties&quot;:{&quot;invoiceId&quot;:{&quot;description&quot;:&quot;The invoice id&quot;,&quot;type&quot;:&quot;string&quot;},&quot;userId&quot;:{&quot;description&quot;:&quot;The user id&quot;,&quot;type&quot;:&quot;string&quot;}},&quot;required&quot;:[&quot;invoiceId&quot;,&quot;userId&quot;],&quot;title&quot;:&quot;Invoice Paid Event&quot;,&quot;type&quot;:&quot;object&quot;}</example>
        */
        [DataMember(Name = "schema", IsRequired = true, EmitDefaultValue = true)]
        public Object Schema { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EventTypeSchemaIn {\n");
            sb.Append("  Schema: ").Append(Schema).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
