/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Svix.Client.FileParameter;
using OpenAPIDateConverter = Svix.Client.OpenAPIDateConverter;

namespace Svix.Model
{
    /// <summary>
    /// RotatePollerTokenIn
    /// </summary>
    [DataContract(Name = "RotatePollerTokenIn")]
    public partial class RotatePollerTokenIn : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RotatePollerTokenIn" /> class.
        /// </summary>
        /// <param name="expiry">How long the token will be valid for, in seconds. Can be up to 31,536,000 seconds (1 year)..</param>
        /// <param name="oldTokenExpiry">Updates the previous token&#39;s expiration, in seconds.  If set to 0, the old token will immediately be revoked. Must be between 0 and 86,400 seconds (1 day).  Defaults to 300 seconds (5 minutes). (default to 300).</param>
        public RotatePollerTokenIn(long? expiry = default(long?), long oldTokenExpiry = 300)
        {
            this.Expiry = expiry;
            this.OldTokenExpiry = oldTokenExpiry;
        }

        /// <summary>
        /// How long the token will be valid for, in seconds. Can be up to 31,536,000 seconds (1 year).
        /// </summary>
        /// <value>How long the token will be valid for, in seconds. Can be up to 31,536,000 seconds (1 year).</value>
        [DataMember(Name = "expiry", EmitDefaultValue = true)]
        public long? Expiry { get; set; }

        /// <summary>
        /// Updates the previous token&#39;s expiration, in seconds.  If set to 0, the old token will immediately be revoked. Must be between 0 and 86,400 seconds (1 day).  Defaults to 300 seconds (5 minutes).
        /// </summary>
        /// <value>Updates the previous token&#39;s expiration, in seconds.  If set to 0, the old token will immediately be revoked. Must be between 0 and 86,400 seconds (1 day).  Defaults to 300 seconds (5 minutes).</value>
        [DataMember(Name = "oldTokenExpiry", EmitDefaultValue = false)]
        public long OldTokenExpiry { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RotatePollerTokenIn {\n");
            sb.Append("  Expiry: ").Append(Expiry).Append("\n");
            sb.Append("  OldTokenExpiry: ").Append(OldTokenExpiry).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Expiry (long?) maximum
            if (this.Expiry > (long?)31536000)
            {
                yield return new ValidationResult("Invalid value for Expiry, must be a value less than or equal to 31536000.", new [] { "Expiry" });
            }

            // Expiry (long?) minimum
            if (this.Expiry < (long?)1)
            {
                yield return new ValidationResult("Invalid value for Expiry, must be a value greater than or equal to 1.", new [] { "Expiry" });
            }

            // OldTokenExpiry (long) maximum
            if (this.OldTokenExpiry > (long)86400)
            {
                yield return new ValidationResult("Invalid value for OldTokenExpiry, must be a value less than or equal to 86400.", new [] { "OldTokenExpiry" });
            }

            // OldTokenExpiry (long) minimum
            if (this.OldTokenExpiry < (long)0)
            {
                yield return new ValidationResult("Invalid value for OldTokenExpiry, must be a value greater than or equal to 0.", new [] { "OldTokenExpiry" });
            }

            yield break;
        }
    }

}
