openapi: 3.0.2
info:
  description: The Svix server API documentation
  title: Svix
  version: "1.4"
servers:
- url: https://api.svix.com
- url: http://localhost:8040
paths:
  /api/v1/health/:
    get:
      description: Verify the API server is up and running.
      operationId: health_api_v1_health__get
      responses:
        "204":
          description: Successful Response
      summary: Health
      tags:
      - health
  /api/v1/app/:
    get:
      operationId: list_applications_api_v1_app__get
      parameters:
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_ApplicationOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Applications
      tags:
      - application
    post:
      operationId: create_application_api_v1_app__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Application
      tags:
      - application
  /api/v1/app/{app_id}/:
    delete:
      operationId: delete_application_api_v1_app__app_id___delete
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "204":
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Application
      tags:
      - application
    get:
      operationId: get_application_api_v1_app__app_id___get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Application
      tags:
      - application
    put:
      operationId: update_application_api_v1_app__app_id___put
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Application
      tags:
      - application
  /api/v1/auth/dashboard-access/{app_id}/:
    post:
      description: Use this function to get magic links (and authentication codes)
        for connecting your users to the management UIs.
      operationId: get_dashboard_access_api_v1_auth_dashboard_access__app_id___post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardAccessOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Dashboard Access
      tags:
      - authentication
  /api/v1/auth/logout/:
    post:
      operationId: logout_api_v1_auth_logout__post
      responses:
        "204":
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
      security:
      - HTTPBearer: []
      summary: Logout
      tags:
      - authentication
  /api/v1/event-type/:
    get:
      operationId: list_event_types_api_v1_event_type__get
      parameters:
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EventTypeInOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Event Types
      tags:
      - event type
    post:
      operationId: create_event_type_api_v1_event_type__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeInOut'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeInOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Event Type
      tags:
      - event type
  /api/v1/event-type/{event_type_name}/:
    delete:
      operationId: delete_event_type_api_v1_event_type__event_type_name___delete
      parameters:
      - explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          title: Event Type Name
          type: string
        style: simple
      responses:
        "204":
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Event Type
      tags:
      - event type
    put:
      operationId: update_event_type_api_v1_event_type__event_type_name___put
      parameters:
      - explode: false
        in: path
        name: event_type_name
        required: true
        schema:
          title: Event Type Name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTypeUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTypeInOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Event Type
      tags:
      - event type
  /api/v1/app/{app_id}/endpoint/:
    get:
      operationId: list_endpoints_api_v1_app__app_id__endpoint__get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EndpointOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Endpoints
      tags:
      - endpoint
    post:
      operationId: create_endpoint_api_v1_app__app_id__endpoint__post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointIn'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Endpoint
      tags:
      - endpoint
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/:
    delete:
      operationId: delete_endpoint_api_v1_app__app_id__endpoint__endpoint_id___delete
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "204":
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Endpoint
      tags:
      - endpoint
    get:
      operationId: get_endpoint_api_v1_app__app_id__endpoint__endpoint_id___get
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Endpoint
      tags:
      - endpoint
    put:
      operationId: update_endpoint_api_v1_app__app_id__endpoint__endpoint_id___put
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Endpoint
      tags:
      - endpoint
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/:
    get:
      operationId: get_endpoint_secret_api_v1_app__app_id__endpoint__endpoint_id__secret__get
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSecret'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Endpoint Secret
      tags:
      - endpoint
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/:
    get:
      operationId: get_endpoint_stats_api_v1_app__app_id__endpoint__endpoint_id__stats__get
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointStats'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Endpoint Stats
      tags:
      - endpoint
  /api/v1/app/{app_id}/msg/:
    get:
      operationId: list_messages_api_v1_app__app_id__msg__get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Messages
      tags:
      - message
    post:
      description: |-
        Creates a new message and schedules it to be sent.
        If the message includes an `event_id` and a message with this id already exists, a 409 conflict error will be returned.
      operationId: create_message_api_v1_app__app_id__msg__post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageIn'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Message
      tags:
      - message
  /api/v1/app/{app_id}/msg/{msg_id}/:
    get:
      operationId: get_message_api_v1_app__app_id__msg__msg_id___get
      parameters:
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Message
      tags:
      - message
  /api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/:
    get:
      operationId: list_attempted_messages_api_v1_app__app_id__endpoint__endpoint_id__msg__get
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EndpointMessageOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Attempted Messages
      tags:
      - message attempt
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint/:
    get:
      operationId: list_attempted_destinations_api_v1_app__app_id__msg__msg_id__endpoint__get
      parameters:
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageEndpointOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Attempted Destinations
      tags:
      - message attempt
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/:
    post:
      description: Resend a message to the specified endpoint.
      operationId: resend_webhook_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__resend__post
      parameters:
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseModel'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Resend Webhook
      tags:
      - message attempt
  /api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/:
    get:
      operationId: list_attempts_for_endpoint_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__attempt__get
      parameters:
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: endpoint_id
        required: true
        schema:
          title: Endpoint Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptEndpointOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Attempts For Endpoint
      tags:
      - message attempt
  /api/v1/app/{app_id}/msg/{msg_id}/attempt/:
    get:
      operationId: list_attempts_api_v1_app__app_id__msg__msg_id__attempt__get
      parameters:
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      - explode: true
        in: query
        name: iterator
        required: false
        schema:
          title: Iterator
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/MessageStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_MessageAttemptOut_'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Attempts
      tags:
      - message attempt
  /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/:
    get:
      operationId: get_attempt_api_v1_app__app_id__msg__msg_id__attempt__attempt_id___get
      parameters:
      - explode: false
        in: path
        name: attempt_id
        required: true
        schema:
          title: Attempt Id
          type: string
        style: simple
      - explode: false
        in: path
        name: msg_id
        required: true
        schema:
          title: Msg Id
          type: string
        style: simple
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          title: App Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageAttemptOut'
          description: Successful Response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Attempt
      tags:
      - message attempt
  /api/v1/development/echo/:
    post:
      operationId: echo_api_v1_development_echo__post
      responses:
        "204":
          description: Successful Response
      summary: Echo
      tags:
      - development
components:
  schemas:
    ApplicationIn:
      example:
        uid: uid
        name: name
      properties:
        uid:
          title: Uid
          type: string
        name:
          title: Name
          type: string
      required:
      - name
      title: ApplicationIn
      type: object
    ApplicationOut:
      example:
        uid: uid
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        uid:
          title: Uid
          type: string
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        createdAt:
          format: date-time
          title: Createdat
          type: string
      required:
      - createdAt
      - id
      - name
      title: ApplicationOut
      type: object
    BaseModel:
      properties: {}
      title: BaseModel
      type: object
    DashboardAccessOut:
      example:
        url: https://openapi-generator.tech
        token: token
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Url
          type: string
        token:
          title: Token
          type: string
      required:
      - token
      - url
      title: DashboardAccessOut
      type: object
    EndpointIn:
      example:
        description: description
        version: 0
        filterTypes:
        - filterTypes
        - filterTypes
        url: https://openapi-generator.tech
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Url
          type: string
        version:
          title: Version
          type: integer
        description:
          default: ""
          title: Description
          type: string
        filterTypes:
          items:
            type: string
          title: Filtertypes
          type: array
          uniqueItems: true
      required:
      - url
      - version
      title: EndpointIn
      type: object
    EndpointMessageOut:
      example:
        eventId: evt_pNZKtWg8Azow
        data:
          username: test_user
          email: test@example.com
        eventType: user.signup
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        eventType:
          example: user.signup
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventtype
          type: string
        eventId:
          example: evt_pNZKtWg8Azow
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventid
          type: string
        data:
          example:
            username: test_user
            email: test@example.com
          title: Data
          type: object
        id:
          title: Id
          type: string
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        status:
          $ref: '#/components/schemas/MessageStatus'
      required:
      - data
      - eventType
      - id
      - status
      - timestamp
      title: EndpointMessageOut
      type: object
    EndpointOut:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        version: 0
        filterTypes:
        - filterTypes
        - filterTypes
        url: https://openapi-generator.tech
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Url
          type: string
        version:
          title: Version
          type: integer
        description:
          default: ""
          title: Description
          type: string
        filterTypes:
          items:
            type: string
          title: Filtertypes
          type: array
          uniqueItems: true
        id:
          title: Id
          type: string
        createdAt:
          format: date-time
          title: Createdat
          type: string
      required:
      - createdAt
      - id
      - url
      - version
      title: EndpointOut
      type: object
    EndpointSecret:
      example:
        key: key
      properties:
        key:
          title: Key
          type: string
      required:
      - key
      title: EndpointSecret
      type: object
    EndpointStats:
      example:
        fail: 1
        success: 0
        pending: 6
      properties:
        success:
          title: Success
          type: integer
        pending:
          title: Pending
          type: integer
        fail:
          title: Fail
          type: integer
      required:
      - fail
      - pending
      - success
      title: EndpointStats
      type: object
    EventTypeInOut:
      example:
        name: user.signup
        description: description
      properties:
        description:
          title: Description
          type: string
        name:
          example: user.signup
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Name
          type: string
      required:
      - description
      - name
      title: EventTypeInOut
      type: object
    EventTypeUpdate:
      example:
        description: description
      properties:
        description:
          title: Description
          type: string
      required:
      - description
      title: EventTypeUpdate
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HttpErrorField:
      properties:
        field:
          title: Field
          type: string
        code:
          title: Code
          type: string
        detail:
          title: Detail
          type: string
      required:
      - code
      - detail
      - field
      title: HttpErrorField
      type: object
    HttpErrorOut:
      properties:
        code:
          title: Code
          type: string
        detail:
          title: Detail
          type: string
        errors:
          items:
            $ref: '#/components/schemas/HttpErrorField'
          title: Errors
          type: array
      required:
      - code
      - detail
      title: HttpError
      type: object
    ListResponse_ApplicationOut_:
      example:
        iterator: iterator
        data:
        - uid: uid
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        - uid: uid
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApplicationOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[ApplicationOut]
      type: object
    ListResponse_EndpointMessageOut_:
      example:
        iterator: iterator
        data:
        - eventId: evt_pNZKtWg8Azow
          data:
            username: test_user
            email: test@example.com
          eventType: user.signup
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - eventId: evt_pNZKtWg8Azow
          data:
            username: test_user
            email: test@example.com
          eventType: user.signup
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointMessageOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[EndpointMessageOut]
      type: object
    ListResponse_EndpointOut_:
      example:
        iterator: iterator
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          version: 0
          filterTypes:
          - filterTypes
          - filterTypes
          url: https://openapi-generator.tech
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          version: 0
          filterTypes:
          - filterTypes
          - filterTypes
          url: https://openapi-generator.tech
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[EndpointOut]
      type: object
    ListResponse_EventTypeInOut_:
      example:
        iterator: iterator
        data:
        - name: user.signup
          description: description
        - name: user.signup
          description: description
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventTypeInOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[EventTypeInOut]
      type: object
    ListResponse_MessageAttemptEndpointOut_:
      example:
        iterator: iterator
        data:
        - responseStatusCode: 0
          response: response
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - responseStatusCode: 0
          response: response
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageAttemptEndpointOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[MessageAttemptEndpointOut]
      type: object
    ListResponse_MessageAttemptOut_:
      example:
        iterator: iterator
        data:
        - responseStatusCode: 0
          response: response
          endpointId: endpointId
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - responseStatusCode: 0
          response: response
          endpointId: endpointId
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageAttemptOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[MessageAttemptOut]
      type: object
    ListResponse_MessageEndpointOut_:
      example:
        iterator: iterator
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          version: 0
          filterTypes:
          - filterTypes
          - filterTypes
          url: https://openapi-generator.tech
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          version: 0
          filterTypes:
          - filterTypes
          - filterTypes
          url: https://openapi-generator.tech
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageEndpointOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[MessageEndpointOut]
      type: object
    ListResponse_MessageOut_:
      example:
        iterator: iterator
        data:
        - eventId: evt_pNZKtWg8Azow
          data:
            username: test_user
            email: test@example.com
          eventType: user.signup
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        - eventId: evt_pNZKtWg8Azow
          data:
            username: test_user
            email: test@example.com
          eventType: user.signup
          id: id
          timestamp: 2000-01-23T04:56:07.000+00:00
        done: true
      properties:
        data:
          items:
            $ref: '#/components/schemas/MessageOut'
          title: Data
          type: array
        iterator:
          title: Iterator
          type: string
        done:
          title: Done
          type: boolean
      required:
      - data
      - done
      title: ListResponse[MessageOut]
      type: object
    MessageAttemptEndpointOut:
      example:
        responseStatusCode: 0
        response: response
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          title: Id
          type: string
        response:
          title: Response
          type: string
        responseStatusCode:
          title: Responsestatuscode
          type: integer
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        status:
          $ref: '#/components/schemas/MessageStatus'
      required:
      - id
      - response
      - responseStatusCode
      - status
      - timestamp
      title: MessageAttemptEndpointOut
      type: object
    MessageAttemptOut:
      example:
        responseStatusCode: 0
        response: response
        endpointId: endpointId
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          title: Id
          type: string
        response:
          title: Response
          type: string
        responseStatusCode:
          title: Responsestatuscode
          type: integer
        timestamp:
          format: date-time
          title: Timestamp
          type: string
        status:
          $ref: '#/components/schemas/MessageStatus'
        endpointId:
          title: Endpointid
          type: string
      required:
      - endpointId
      - id
      - response
      - responseStatusCode
      - status
      - timestamp
      title: MessageAttemptOut
      type: object
    MessageEndpointOut:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        version: 0
        filterTypes:
        - filterTypes
        - filterTypes
        url: https://openapi-generator.tech
      properties:
        url:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Url
          type: string
        version:
          title: Version
          type: integer
        description:
          default: ""
          title: Description
          type: string
        filterTypes:
          items:
            type: string
          title: Filtertypes
          type: array
          uniqueItems: true
        id:
          title: Id
          type: string
        createdAt:
          format: date-time
          title: Createdat
          type: string
        status:
          $ref: '#/components/schemas/MessageStatus'
      required:
      - createdAt
      - id
      - status
      - url
      - version
      title: MessageEndpointOut
      type: object
    MessageIn:
      example:
        eventId: evt_pNZKtWg8Azow
        data:
          username: test_user
          email: test@example.com
        eventType: user.signup
      properties:
        eventType:
          example: user.signup
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventtype
          type: string
        eventId:
          example: evt_pNZKtWg8Azow
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventid
          type: string
        data:
          example:
            username: test_user
            email: test@example.com
          title: Data
          type: object
      required:
      - data
      - eventType
      title: MessageIn
      type: object
    MessageOut:
      example:
        eventId: evt_pNZKtWg8Azow
        data:
          username: test_user
          email: test@example.com
        eventType: user.signup
        id: id
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        eventType:
          example: user.signup
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventtype
          type: string
        eventId:
          example: evt_pNZKtWg8Azow
          maxLength: 256
          pattern: ^[a-zA-Z0-9\-_.]+$
          title: Eventid
          type: string
        data:
          example:
            username: test_user
            email: test@example.com
          title: Data
          type: object
        id:
          title: Id
          type: string
        timestamp:
          format: date-time
          title: Timestamp
          type: string
      required:
      - data
      - eventType
      - id
      - timestamp
      title: MessageOut
      type: object
    MessageStatus:
      description: An enumeration.
      enum:
      - 0
      - 1
      - 2
      title: MessageStatus
      type: integer
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
