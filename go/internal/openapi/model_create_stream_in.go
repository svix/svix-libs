/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateStreamIn struct for CreateStreamIn
type CreateStreamIn struct {
	Messages []EventIn `json:"messages"`
}

// NewCreateStreamIn instantiates a new CreateStreamIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStreamIn(messages []EventIn) *CreateStreamIn {
	this := CreateStreamIn{}
	this.Messages = messages
	return &this
}

// NewCreateStreamInWithDefaults instantiates a new CreateStreamIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStreamInWithDefaults() *CreateStreamIn {
	this := CreateStreamIn{}
	return &this
}

// GetMessages returns the Messages field value
func (o *CreateStreamIn) GetMessages() []EventIn {
	if o == nil {
		var ret []EventIn
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *CreateStreamIn) GetMessagesOk() (*[]EventIn, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *CreateStreamIn) SetMessages(v []EventIn) {
	o.Messages = v
}

func (o CreateStreamIn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableCreateStreamIn struct {
	value *CreateStreamIn
	isSet bool
}

func (v NullableCreateStreamIn) Get() *CreateStreamIn {
	return v.value
}

func (v *NullableCreateStreamIn) Set(val *CreateStreamIn) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStreamIn) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStreamIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStreamIn(val *CreateStreamIn) *NullableCreateStreamIn {
	return &NullableCreateStreamIn{value: val, isSet: true}
}

func (v NullableCreateStreamIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStreamIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


