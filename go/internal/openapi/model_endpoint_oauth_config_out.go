/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndpointOauthConfigOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointOauthConfigOut{}

// EndpointOauthConfigOut struct for EndpointOauthConfigOut
type EndpointOauthConfigOut struct {
	AuthMethod Oauth2AuthMethodInOut `json:"authMethod"`
	ClientId string `json:"clientId"`
	ExtraParams *map[string]string `json:"extraParams,omitempty"`
	GrantType Oauth2GrantTypeInOut `json:"grantType"`
	Scopes []string `json:"scopes,omitempty"`
	TokenUrl string `json:"tokenUrl"`
}

type _EndpointOauthConfigOut EndpointOauthConfigOut

// NewEndpointOauthConfigOut instantiates a new EndpointOauthConfigOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointOauthConfigOut(authMethod Oauth2AuthMethodInOut, clientId string, grantType Oauth2GrantTypeInOut, tokenUrl string) *EndpointOauthConfigOut {
	this := EndpointOauthConfigOut{}
	this.AuthMethod = authMethod
	this.ClientId = clientId
	this.GrantType = grantType
	this.TokenUrl = tokenUrl
	return &this
}

// NewEndpointOauthConfigOutWithDefaults instantiates a new EndpointOauthConfigOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointOauthConfigOutWithDefaults() *EndpointOauthConfigOut {
	this := EndpointOauthConfigOut{}
	return &this
}

// GetAuthMethod returns the AuthMethod field value
func (o *EndpointOauthConfigOut) GetAuthMethod() Oauth2AuthMethodInOut {
	if o == nil {
		var ret Oauth2AuthMethodInOut
		return ret
	}

	return o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetAuthMethodOk() (*Oauth2AuthMethodInOut, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthMethod, true
}

// SetAuthMethod sets field value
func (o *EndpointOauthConfigOut) SetAuthMethod(v Oauth2AuthMethodInOut) {
	o.AuthMethod = v
}

// GetClientId returns the ClientId field value
func (o *EndpointOauthConfigOut) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *EndpointOauthConfigOut) SetClientId(v string) {
	o.ClientId = v
}

// GetExtraParams returns the ExtraParams field value if set, zero value otherwise.
func (o *EndpointOauthConfigOut) GetExtraParams() map[string]string {
	if o == nil || IsNil(o.ExtraParams) {
		var ret map[string]string
		return ret
	}
	return *o.ExtraParams
}

// GetExtraParamsOk returns a tuple with the ExtraParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetExtraParamsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExtraParams) {
		return nil, false
	}
	return o.ExtraParams, true
}

// HasExtraParams returns a boolean if a field has been set.
func (o *EndpointOauthConfigOut) HasExtraParams() bool {
	if o != nil && !IsNil(o.ExtraParams) {
		return true
	}

	return false
}

// SetExtraParams gets a reference to the given map[string]string and assigns it to the ExtraParams field.
func (o *EndpointOauthConfigOut) SetExtraParams(v map[string]string) {
	o.ExtraParams = &v
}

// GetGrantType returns the GrantType field value
func (o *EndpointOauthConfigOut) GetGrantType() Oauth2GrantTypeInOut {
	if o == nil {
		var ret Oauth2GrantTypeInOut
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetGrantTypeOk() (*Oauth2GrantTypeInOut, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *EndpointOauthConfigOut) SetGrantType(v Oauth2GrantTypeInOut) {
	o.GrantType = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *EndpointOauthConfigOut) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *EndpointOauthConfigOut) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *EndpointOauthConfigOut) SetScopes(v []string) {
	o.Scopes = v
}

// GetTokenUrl returns the TokenUrl field value
func (o *EndpointOauthConfigOut) GetTokenUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenUrl
}

// GetTokenUrlOk returns a tuple with the TokenUrl field value
// and a boolean to check if the value has been set.
func (o *EndpointOauthConfigOut) GetTokenUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenUrl, true
}

// SetTokenUrl sets field value
func (o *EndpointOauthConfigOut) SetTokenUrl(v string) {
	o.TokenUrl = v
}

func (o EndpointOauthConfigOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointOauthConfigOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authMethod"] = o.AuthMethod
	toSerialize["clientId"] = o.ClientId
	if !IsNil(o.ExtraParams) {
		toSerialize["extraParams"] = o.ExtraParams
	}
	toSerialize["grantType"] = o.GrantType
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	toSerialize["tokenUrl"] = o.TokenUrl
	return toSerialize, nil
}

func (o *EndpointOauthConfigOut) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authMethod",
		"clientId",
		"grantType",
		"tokenUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointOauthConfigOut := _EndpointOauthConfigOut{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndpointOauthConfigOut)

	if err != nil {
		return err
	}

	*o = EndpointOauthConfigOut(varEndpointOauthConfigOut)

	return err
}

type NullableEndpointOauthConfigOut struct {
	value *EndpointOauthConfigOut
	isSet bool
}

func (v NullableEndpointOauthConfigOut) Get() *EndpointOauthConfigOut {
	return v.value
}

func (v *NullableEndpointOauthConfigOut) Set(val *EndpointOauthConfigOut) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointOauthConfigOut) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointOauthConfigOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointOauthConfigOut(val *EndpointOauthConfigOut) *NullableEndpointOauthConfigOut {
	return &NullableEndpointOauthConfigOut{value: val, isSet: true}
}

func (v NullableEndpointOauthConfigOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointOauthConfigOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


