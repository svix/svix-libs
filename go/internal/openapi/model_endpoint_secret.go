/*
 * Svix
 *
 * The Svix server API documentation
 *
 * API version: 1.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EndpointSecret struct for EndpointSecret
type EndpointSecret struct {
	Key string `json:"key"`
}

// NewEndpointSecret instantiates a new EndpointSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointSecret(key string, ) *EndpointSecret {
	this := EndpointSecret{}
	this.Key = key
	return &this
}

// NewEndpointSecretWithDefaults instantiates a new EndpointSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointSecretWithDefaults() *EndpointSecret {
	this := EndpointSecret{}
	return &this
}

// GetKey returns the Key field value
func (o *EndpointSecret) GetKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *EndpointSecret) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *EndpointSecret) SetKey(v string) {
	o.Key = v
}

func (o EndpointSecret) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableEndpointSecret struct {
	value *EndpointSecret
	isSet bool
}

func (v NullableEndpointSecret) Get() *EndpointSecret {
	return v.value
}

func (v *NullableEndpointSecret) Set(val *EndpointSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointSecret(val *EndpointSecret) *NullableEndpointSecret {
	return &NullableEndpointSecret{value: val, isSet: true}
}

func (v NullableEndpointSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


