/*
Svix API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EnvironmentSettingsOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentSettingsOut{}

// EnvironmentSettingsOut struct for EnvironmentSettingsOut
type EnvironmentSettingsOut struct {
	ColorPaletteDark *CustomColorPalette `json:"colorPaletteDark,omitempty"`
	ColorPaletteLight *CustomColorPalette `json:"colorPaletteLight,omitempty"`
	CustomColor *string `json:"customColor,omitempty"`
	CustomFontFamily *string `json:"customFontFamily,omitempty" validate:"regexp=^[a-zA-Z0-9\\\\-_ ]+$"`
	CustomFontFamilyUrl *string `json:"customFontFamilyUrl,omitempty"`
	CustomLogoUrl *string `json:"customLogoUrl,omitempty"`
	CustomStringsOverride *CustomStringsOverride `json:"customStringsOverride,omitempty"`
	CustomThemeOverride *CustomThemeOverride `json:"customThemeOverride,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	EnableChannels *bool `json:"enableChannels,omitempty"`
	EnableIntegrationManagement *bool `json:"enableIntegrationManagement,omitempty"`
	EnableMessageStream *bool `json:"enableMessageStream,omitempty"`
	EnableMessageTags *bool `json:"enableMessageTags,omitempty"`
	EnableTransformations *bool `json:"enableTransformations,omitempty"`
	ShowUseSvixPlay *bool `json:"showUseSvixPlay,omitempty"`
	WipeSuccessfulPayload *bool `json:"wipeSuccessfulPayload,omitempty"`
}

// NewEnvironmentSettingsOut instantiates a new EnvironmentSettingsOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSettingsOut() *EnvironmentSettingsOut {
	this := EnvironmentSettingsOut{}
	var enableChannels bool = false
	this.EnableChannels = &enableChannels
	var enableIntegrationManagement bool = false
	this.EnableIntegrationManagement = &enableIntegrationManagement
	var enableMessageStream bool = false
	this.EnableMessageStream = &enableMessageStream
	var enableMessageTags bool = false
	this.EnableMessageTags = &enableMessageTags
	var enableTransformations bool = false
	this.EnableTransformations = &enableTransformations
	var showUseSvixPlay bool = true
	this.ShowUseSvixPlay = &showUseSvixPlay
	var wipeSuccessfulPayload bool = false
	this.WipeSuccessfulPayload = &wipeSuccessfulPayload
	return &this
}

// NewEnvironmentSettingsOutWithDefaults instantiates a new EnvironmentSettingsOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSettingsOutWithDefaults() *EnvironmentSettingsOut {
	this := EnvironmentSettingsOut{}
	var enableChannels bool = false
	this.EnableChannels = &enableChannels
	var enableIntegrationManagement bool = false
	this.EnableIntegrationManagement = &enableIntegrationManagement
	var enableMessageStream bool = false
	this.EnableMessageStream = &enableMessageStream
	var enableMessageTags bool = false
	this.EnableMessageTags = &enableMessageTags
	var enableTransformations bool = false
	this.EnableTransformations = &enableTransformations
	var showUseSvixPlay bool = true
	this.ShowUseSvixPlay = &showUseSvixPlay
	var wipeSuccessfulPayload bool = false
	this.WipeSuccessfulPayload = &wipeSuccessfulPayload
	return &this
}

// GetColorPaletteDark returns the ColorPaletteDark field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetColorPaletteDark() CustomColorPalette {
	if o == nil || IsNil(o.ColorPaletteDark) {
		var ret CustomColorPalette
		return ret
	}
	return *o.ColorPaletteDark
}

// GetColorPaletteDarkOk returns a tuple with the ColorPaletteDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetColorPaletteDarkOk() (*CustomColorPalette, bool) {
	if o == nil || IsNil(o.ColorPaletteDark) {
		return nil, false
	}
	return o.ColorPaletteDark, true
}

// HasColorPaletteDark returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasColorPaletteDark() bool {
	if o != nil && !IsNil(o.ColorPaletteDark) {
		return true
	}

	return false
}

// SetColorPaletteDark gets a reference to the given CustomColorPalette and assigns it to the ColorPaletteDark field.
func (o *EnvironmentSettingsOut) SetColorPaletteDark(v CustomColorPalette) {
	o.ColorPaletteDark = &v
}

// GetColorPaletteLight returns the ColorPaletteLight field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetColorPaletteLight() CustomColorPalette {
	if o == nil || IsNil(o.ColorPaletteLight) {
		var ret CustomColorPalette
		return ret
	}
	return *o.ColorPaletteLight
}

// GetColorPaletteLightOk returns a tuple with the ColorPaletteLight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetColorPaletteLightOk() (*CustomColorPalette, bool) {
	if o == nil || IsNil(o.ColorPaletteLight) {
		return nil, false
	}
	return o.ColorPaletteLight, true
}

// HasColorPaletteLight returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasColorPaletteLight() bool {
	if o != nil && !IsNil(o.ColorPaletteLight) {
		return true
	}

	return false
}

// SetColorPaletteLight gets a reference to the given CustomColorPalette and assigns it to the ColorPaletteLight field.
func (o *EnvironmentSettingsOut) SetColorPaletteLight(v CustomColorPalette) {
	o.ColorPaletteLight = &v
}

// GetCustomColor returns the CustomColor field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomColor() string {
	if o == nil || IsNil(o.CustomColor) {
		var ret string
		return ret
	}
	return *o.CustomColor
}

// GetCustomColorOk returns a tuple with the CustomColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomColorOk() (*string, bool) {
	if o == nil || IsNil(o.CustomColor) {
		return nil, false
	}
	return o.CustomColor, true
}

// HasCustomColor returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomColor() bool {
	if o != nil && !IsNil(o.CustomColor) {
		return true
	}

	return false
}

// SetCustomColor gets a reference to the given string and assigns it to the CustomColor field.
func (o *EnvironmentSettingsOut) SetCustomColor(v string) {
	o.CustomColor = &v
}

// GetCustomFontFamily returns the CustomFontFamily field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomFontFamily() string {
	if o == nil || IsNil(o.CustomFontFamily) {
		var ret string
		return ret
	}
	return *o.CustomFontFamily
}

// GetCustomFontFamilyOk returns a tuple with the CustomFontFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomFontFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.CustomFontFamily) {
		return nil, false
	}
	return o.CustomFontFamily, true
}

// HasCustomFontFamily returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomFontFamily() bool {
	if o != nil && !IsNil(o.CustomFontFamily) {
		return true
	}

	return false
}

// SetCustomFontFamily gets a reference to the given string and assigns it to the CustomFontFamily field.
func (o *EnvironmentSettingsOut) SetCustomFontFamily(v string) {
	o.CustomFontFamily = &v
}

// GetCustomFontFamilyUrl returns the CustomFontFamilyUrl field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomFontFamilyUrl() string {
	if o == nil || IsNil(o.CustomFontFamilyUrl) {
		var ret string
		return ret
	}
	return *o.CustomFontFamilyUrl
}

// GetCustomFontFamilyUrlOk returns a tuple with the CustomFontFamilyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomFontFamilyUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CustomFontFamilyUrl) {
		return nil, false
	}
	return o.CustomFontFamilyUrl, true
}

// HasCustomFontFamilyUrl returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomFontFamilyUrl() bool {
	if o != nil && !IsNil(o.CustomFontFamilyUrl) {
		return true
	}

	return false
}

// SetCustomFontFamilyUrl gets a reference to the given string and assigns it to the CustomFontFamilyUrl field.
func (o *EnvironmentSettingsOut) SetCustomFontFamilyUrl(v string) {
	o.CustomFontFamilyUrl = &v
}

// GetCustomLogoUrl returns the CustomLogoUrl field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomLogoUrl() string {
	if o == nil || IsNil(o.CustomLogoUrl) {
		var ret string
		return ret
	}
	return *o.CustomLogoUrl
}

// GetCustomLogoUrlOk returns a tuple with the CustomLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CustomLogoUrl) {
		return nil, false
	}
	return o.CustomLogoUrl, true
}

// HasCustomLogoUrl returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomLogoUrl() bool {
	if o != nil && !IsNil(o.CustomLogoUrl) {
		return true
	}

	return false
}

// SetCustomLogoUrl gets a reference to the given string and assigns it to the CustomLogoUrl field.
func (o *EnvironmentSettingsOut) SetCustomLogoUrl(v string) {
	o.CustomLogoUrl = &v
}

// GetCustomStringsOverride returns the CustomStringsOverride field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomStringsOverride() CustomStringsOverride {
	if o == nil || IsNil(o.CustomStringsOverride) {
		var ret CustomStringsOverride
		return ret
	}
	return *o.CustomStringsOverride
}

// GetCustomStringsOverrideOk returns a tuple with the CustomStringsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomStringsOverrideOk() (*CustomStringsOverride, bool) {
	if o == nil || IsNil(o.CustomStringsOverride) {
		return nil, false
	}
	return o.CustomStringsOverride, true
}

// HasCustomStringsOverride returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomStringsOverride() bool {
	if o != nil && !IsNil(o.CustomStringsOverride) {
		return true
	}

	return false
}

// SetCustomStringsOverride gets a reference to the given CustomStringsOverride and assigns it to the CustomStringsOverride field.
func (o *EnvironmentSettingsOut) SetCustomStringsOverride(v CustomStringsOverride) {
	o.CustomStringsOverride = &v
}

// GetCustomThemeOverride returns the CustomThemeOverride field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetCustomThemeOverride() CustomThemeOverride {
	if o == nil || IsNil(o.CustomThemeOverride) {
		var ret CustomThemeOverride
		return ret
	}
	return *o.CustomThemeOverride
}

// GetCustomThemeOverrideOk returns a tuple with the CustomThemeOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetCustomThemeOverrideOk() (*CustomThemeOverride, bool) {
	if o == nil || IsNil(o.CustomThemeOverride) {
		return nil, false
	}
	return o.CustomThemeOverride, true
}

// HasCustomThemeOverride returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasCustomThemeOverride() bool {
	if o != nil && !IsNil(o.CustomThemeOverride) {
		return true
	}

	return false
}

// SetCustomThemeOverride gets a reference to the given CustomThemeOverride and assigns it to the CustomThemeOverride field.
func (o *EnvironmentSettingsOut) SetCustomThemeOverride(v CustomThemeOverride) {
	o.CustomThemeOverride = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EnvironmentSettingsOut) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEnableChannels returns the EnableChannels field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetEnableChannels() bool {
	if o == nil || IsNil(o.EnableChannels) {
		var ret bool
		return ret
	}
	return *o.EnableChannels
}

// GetEnableChannelsOk returns a tuple with the EnableChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetEnableChannelsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableChannels) {
		return nil, false
	}
	return o.EnableChannels, true
}

// HasEnableChannels returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasEnableChannels() bool {
	if o != nil && !IsNil(o.EnableChannels) {
		return true
	}

	return false
}

// SetEnableChannels gets a reference to the given bool and assigns it to the EnableChannels field.
func (o *EnvironmentSettingsOut) SetEnableChannels(v bool) {
	o.EnableChannels = &v
}

// GetEnableIntegrationManagement returns the EnableIntegrationManagement field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetEnableIntegrationManagement() bool {
	if o == nil || IsNil(o.EnableIntegrationManagement) {
		var ret bool
		return ret
	}
	return *o.EnableIntegrationManagement
}

// GetEnableIntegrationManagementOk returns a tuple with the EnableIntegrationManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetEnableIntegrationManagementOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIntegrationManagement) {
		return nil, false
	}
	return o.EnableIntegrationManagement, true
}

// HasEnableIntegrationManagement returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasEnableIntegrationManagement() bool {
	if o != nil && !IsNil(o.EnableIntegrationManagement) {
		return true
	}

	return false
}

// SetEnableIntegrationManagement gets a reference to the given bool and assigns it to the EnableIntegrationManagement field.
func (o *EnvironmentSettingsOut) SetEnableIntegrationManagement(v bool) {
	o.EnableIntegrationManagement = &v
}

// GetEnableMessageStream returns the EnableMessageStream field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetEnableMessageStream() bool {
	if o == nil || IsNil(o.EnableMessageStream) {
		var ret bool
		return ret
	}
	return *o.EnableMessageStream
}

// GetEnableMessageStreamOk returns a tuple with the EnableMessageStream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetEnableMessageStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMessageStream) {
		return nil, false
	}
	return o.EnableMessageStream, true
}

// HasEnableMessageStream returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasEnableMessageStream() bool {
	if o != nil && !IsNil(o.EnableMessageStream) {
		return true
	}

	return false
}

// SetEnableMessageStream gets a reference to the given bool and assigns it to the EnableMessageStream field.
func (o *EnvironmentSettingsOut) SetEnableMessageStream(v bool) {
	o.EnableMessageStream = &v
}

// GetEnableMessageTags returns the EnableMessageTags field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetEnableMessageTags() bool {
	if o == nil || IsNil(o.EnableMessageTags) {
		var ret bool
		return ret
	}
	return *o.EnableMessageTags
}

// GetEnableMessageTagsOk returns a tuple with the EnableMessageTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetEnableMessageTagsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMessageTags) {
		return nil, false
	}
	return o.EnableMessageTags, true
}

// HasEnableMessageTags returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasEnableMessageTags() bool {
	if o != nil && !IsNil(o.EnableMessageTags) {
		return true
	}

	return false
}

// SetEnableMessageTags gets a reference to the given bool and assigns it to the EnableMessageTags field.
func (o *EnvironmentSettingsOut) SetEnableMessageTags(v bool) {
	o.EnableMessageTags = &v
}

// GetEnableTransformations returns the EnableTransformations field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetEnableTransformations() bool {
	if o == nil || IsNil(o.EnableTransformations) {
		var ret bool
		return ret
	}
	return *o.EnableTransformations
}

// GetEnableTransformationsOk returns a tuple with the EnableTransformations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetEnableTransformationsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableTransformations) {
		return nil, false
	}
	return o.EnableTransformations, true
}

// HasEnableTransformations returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasEnableTransformations() bool {
	if o != nil && !IsNil(o.EnableTransformations) {
		return true
	}

	return false
}

// SetEnableTransformations gets a reference to the given bool and assigns it to the EnableTransformations field.
func (o *EnvironmentSettingsOut) SetEnableTransformations(v bool) {
	o.EnableTransformations = &v
}

// GetShowUseSvixPlay returns the ShowUseSvixPlay field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetShowUseSvixPlay() bool {
	if o == nil || IsNil(o.ShowUseSvixPlay) {
		var ret bool
		return ret
	}
	return *o.ShowUseSvixPlay
}

// GetShowUseSvixPlayOk returns a tuple with the ShowUseSvixPlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetShowUseSvixPlayOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowUseSvixPlay) {
		return nil, false
	}
	return o.ShowUseSvixPlay, true
}

// HasShowUseSvixPlay returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasShowUseSvixPlay() bool {
	if o != nil && !IsNil(o.ShowUseSvixPlay) {
		return true
	}

	return false
}

// SetShowUseSvixPlay gets a reference to the given bool and assigns it to the ShowUseSvixPlay field.
func (o *EnvironmentSettingsOut) SetShowUseSvixPlay(v bool) {
	o.ShowUseSvixPlay = &v
}

// GetWipeSuccessfulPayload returns the WipeSuccessfulPayload field value if set, zero value otherwise.
func (o *EnvironmentSettingsOut) GetWipeSuccessfulPayload() bool {
	if o == nil || IsNil(o.WipeSuccessfulPayload) {
		var ret bool
		return ret
	}
	return *o.WipeSuccessfulPayload
}

// GetWipeSuccessfulPayloadOk returns a tuple with the WipeSuccessfulPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSettingsOut) GetWipeSuccessfulPayloadOk() (*bool, bool) {
	if o == nil || IsNil(o.WipeSuccessfulPayload) {
		return nil, false
	}
	return o.WipeSuccessfulPayload, true
}

// HasWipeSuccessfulPayload returns a boolean if a field has been set.
func (o *EnvironmentSettingsOut) HasWipeSuccessfulPayload() bool {
	if o != nil && !IsNil(o.WipeSuccessfulPayload) {
		return true
	}

	return false
}

// SetWipeSuccessfulPayload gets a reference to the given bool and assigns it to the WipeSuccessfulPayload field.
func (o *EnvironmentSettingsOut) SetWipeSuccessfulPayload(v bool) {
	o.WipeSuccessfulPayload = &v
}

func (o EnvironmentSettingsOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentSettingsOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ColorPaletteDark) {
		toSerialize["colorPaletteDark"] = o.ColorPaletteDark
	}
	if !IsNil(o.ColorPaletteLight) {
		toSerialize["colorPaletteLight"] = o.ColorPaletteLight
	}
	if !IsNil(o.CustomColor) {
		toSerialize["customColor"] = o.CustomColor
	}
	if !IsNil(o.CustomFontFamily) {
		toSerialize["customFontFamily"] = o.CustomFontFamily
	}
	if !IsNil(o.CustomFontFamilyUrl) {
		toSerialize["customFontFamilyUrl"] = o.CustomFontFamilyUrl
	}
	if !IsNil(o.CustomLogoUrl) {
		toSerialize["customLogoUrl"] = o.CustomLogoUrl
	}
	if !IsNil(o.CustomStringsOverride) {
		toSerialize["customStringsOverride"] = o.CustomStringsOverride
	}
	if !IsNil(o.CustomThemeOverride) {
		toSerialize["customThemeOverride"] = o.CustomThemeOverride
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.EnableChannels) {
		toSerialize["enableChannels"] = o.EnableChannels
	}
	if !IsNil(o.EnableIntegrationManagement) {
		toSerialize["enableIntegrationManagement"] = o.EnableIntegrationManagement
	}
	if !IsNil(o.EnableMessageStream) {
		toSerialize["enableMessageStream"] = o.EnableMessageStream
	}
	if !IsNil(o.EnableMessageTags) {
		toSerialize["enableMessageTags"] = o.EnableMessageTags
	}
	if !IsNil(o.EnableTransformations) {
		toSerialize["enableTransformations"] = o.EnableTransformations
	}
	if !IsNil(o.ShowUseSvixPlay) {
		toSerialize["showUseSvixPlay"] = o.ShowUseSvixPlay
	}
	if !IsNil(o.WipeSuccessfulPayload) {
		toSerialize["wipeSuccessfulPayload"] = o.WipeSuccessfulPayload
	}
	return toSerialize, nil
}

type NullableEnvironmentSettingsOut struct {
	value *EnvironmentSettingsOut
	isSet bool
}

func (v NullableEnvironmentSettingsOut) Get() *EnvironmentSettingsOut {
	return v.value
}

func (v *NullableEnvironmentSettingsOut) Set(val *EnvironmentSettingsOut) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSettingsOut) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSettingsOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSettingsOut(val *EnvironmentSettingsOut) *NullableEnvironmentSettingsOut {
	return &NullableEnvironmentSettingsOut{value: val, isSet: true}
}

func (v NullableEnvironmentSettingsOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSettingsOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


