/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GoogleCloudStorageConfig Configuration for a Google Cloud Storage sink.  Write stream events into the named bucket using the supplied Google Cloud credentials.
type GoogleCloudStorageConfig struct {
	Bucket string `json:"bucket"`
	// Google Cloud Credentials JSON Object as a string.
	Credentials string `json:"credentials"`
}

// NewGoogleCloudStorageConfig instantiates a new GoogleCloudStorageConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleCloudStorageConfig(bucket string, credentials string) *GoogleCloudStorageConfig {
	this := GoogleCloudStorageConfig{}
	this.Bucket = bucket
	this.Credentials = credentials
	return &this
}

// NewGoogleCloudStorageConfigWithDefaults instantiates a new GoogleCloudStorageConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleCloudStorageConfigWithDefaults() *GoogleCloudStorageConfig {
	this := GoogleCloudStorageConfig{}
	return &this
}

// GetBucket returns the Bucket field value
func (o *GoogleCloudStorageConfig) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *GoogleCloudStorageConfig) GetBucketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *GoogleCloudStorageConfig) SetBucket(v string) {
	o.Bucket = v
}

// GetCredentials returns the Credentials field value
func (o *GoogleCloudStorageConfig) GetCredentials() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *GoogleCloudStorageConfig) GetCredentialsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *GoogleCloudStorageConfig) SetCredentials(v string) {
	o.Credentials = v
}

func (o GoogleCloudStorageConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bucket"] = o.Bucket
	}
	if true {
		toSerialize["credentials"] = o.Credentials
	}
	return json.Marshal(toSerialize)
}

type NullableGoogleCloudStorageConfig struct {
	value *GoogleCloudStorageConfig
	isSet bool
}

func (v NullableGoogleCloudStorageConfig) Get() *GoogleCloudStorageConfig {
	return v.value
}

func (v *NullableGoogleCloudStorageConfig) Set(val *GoogleCloudStorageConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleCloudStorageConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleCloudStorageConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleCloudStorageConfig(val *GoogleCloudStorageConfig) *NullableGoogleCloudStorageConfig {
	return &NullableGoogleCloudStorageConfig{value: val, isSet: true}
}

func (v NullableGoogleCloudStorageConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleCloudStorageConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


