/*
 * Svix
 *
 * The Svix server API documentation
 *
 * API version: 1.4
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HttpErrorField struct for HttpErrorField
type HttpErrorField struct {
	Field string `json:"field"`
	Code string `json:"code"`
	Detail string `json:"detail"`
}

// NewHttpErrorField instantiates a new HttpErrorField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpErrorField(field string, code string, detail string, ) *HttpErrorField {
	this := HttpErrorField{}
	this.Field = field
	this.Code = code
	this.Detail = detail
	return &this
}

// NewHttpErrorFieldWithDefaults instantiates a new HttpErrorField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpErrorFieldWithDefaults() *HttpErrorField {
	this := HttpErrorField{}
	return &this
}

// GetField returns the Field field value
func (o *HttpErrorField) GetField() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *HttpErrorField) GetFieldOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *HttpErrorField) SetField(v string) {
	o.Field = v
}

// GetCode returns the Code field value
func (o *HttpErrorField) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *HttpErrorField) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *HttpErrorField) SetCode(v string) {
	o.Code = v
}

// GetDetail returns the Detail field value
func (o *HttpErrorField) GetDetail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *HttpErrorField) GetDetailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *HttpErrorField) SetDetail(v string) {
	o.Detail = v
}

func (o HttpErrorField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["field"] = o.Field
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["detail"] = o.Detail
	}
	return json.Marshal(toSerialize)
}

type NullableHttpErrorField struct {
	value *HttpErrorField
	isSet bool
}

func (v NullableHttpErrorField) Get() *HttpErrorField {
	return v.value
}

func (v *NullableHttpErrorField) Set(val *HttpErrorField) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpErrorField) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpErrorField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpErrorField(val *HttpErrorField) *NullableHttpErrorField {
	return &NullableHttpErrorField{value: val, isSet: true}
}

func (v NullableHttpErrorField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpErrorField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


