/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SinkOtelV1Config struct for SinkOtelV1Config
type SinkOtelV1Config struct {
	Url string `json:"url"`
}

// NewSinkOtelV1Config instantiates a new SinkOtelV1Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSinkOtelV1Config(url string) *SinkOtelV1Config {
	this := SinkOtelV1Config{}
	this.Url = url
	return &this
}

// NewSinkOtelV1ConfigWithDefaults instantiates a new SinkOtelV1Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSinkOtelV1ConfigWithDefaults() *SinkOtelV1Config {
	this := SinkOtelV1Config{}
	return &this
}

// GetUrl returns the Url field value
func (o *SinkOtelV1Config) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SinkOtelV1Config) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SinkOtelV1Config) SetUrl(v string) {
	o.Url = v
}

func (o SinkOtelV1Config) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableSinkOtelV1Config struct {
	value *SinkOtelV1Config
	isSet bool
}

func (v NullableSinkOtelV1Config) Get() *SinkOtelV1Config {
	return v.value
}

func (v *NullableSinkOtelV1Config) Set(val *SinkOtelV1Config) {
	v.value = val
	v.isSet = true
}

func (v NullableSinkOtelV1Config) IsSet() bool {
	return v.isSet
}

func (v *NullableSinkOtelV1Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSinkOtelV1Config(val *SinkOtelV1Config) *NullableSinkOtelV1Config {
	return &NullableSinkOtelV1Config{value: val, isSet: true}
}

func (v NullableSinkOtelV1Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSinkOtelV1Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


