/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.1.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StreamSinkInOneOf5 struct for StreamSinkInOneOf5
type StreamSinkInOneOf5 struct {
	Config GoogleCloudStorageConfig `json:"config"`
	Type string `json:"type"`
}

// NewStreamSinkInOneOf5 instantiates a new StreamSinkInOneOf5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamSinkInOneOf5(config GoogleCloudStorageConfig, type_ string) *StreamSinkInOneOf5 {
	this := StreamSinkInOneOf5{}
	this.Config = config
	this.Type = type_
	return &this
}

// NewStreamSinkInOneOf5WithDefaults instantiates a new StreamSinkInOneOf5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamSinkInOneOf5WithDefaults() *StreamSinkInOneOf5 {
	this := StreamSinkInOneOf5{}
	return &this
}

// GetConfig returns the Config field value
func (o *StreamSinkInOneOf5) GetConfig() GoogleCloudStorageConfig {
	if o == nil {
		var ret GoogleCloudStorageConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *StreamSinkInOneOf5) GetConfigOk() (*GoogleCloudStorageConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *StreamSinkInOneOf5) SetConfig(v GoogleCloudStorageConfig) {
	o.Config = v
}

// GetType returns the Type field value
func (o *StreamSinkInOneOf5) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *StreamSinkInOneOf5) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *StreamSinkInOneOf5) SetType(v string) {
	o.Type = v
}

func (o StreamSinkInOneOf5) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["config"] = o.Config
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableStreamSinkInOneOf5 struct {
	value *StreamSinkInOneOf5
	isSet bool
}

func (v NullableStreamSinkInOneOf5) Get() *StreamSinkInOneOf5 {
	return v.value
}

func (v *NullableStreamSinkInOneOf5) Set(val *StreamSinkInOneOf5) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamSinkInOneOf5) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamSinkInOneOf5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamSinkInOneOf5(val *StreamSinkInOneOf5) *NullableStreamSinkInOneOf5 {
	return &NullableStreamSinkInOneOf5{value: val, isSet: true}
}

func (v NullableStreamSinkInOneOf5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamSinkInOneOf5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


