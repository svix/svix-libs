{
    "components": {
        "schemas": {
            "ApplicationIn": {
                "properties": {
                    "name": {
                        "example": "My first application",
                        "title": "Name",
                        "type": "string"
                    },
                    "uid": {
                        "example": "unique-app-identifier",
                        "title": "Uid",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "ApplicationIn",
                "type": "object"
            },
            "ApplicationOut": {
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "title": "Createdat",
                        "type": "string"
                    },
                    "id": {
                        "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "name": {
                        "example": "My first application",
                        "title": "Name",
                        "type": "string"
                    },
                    "uid": {
                        "example": "unique-app-identifier",
                        "title": "Uid",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "id",
                    "createdAt"
                ],
                "title": "ApplicationOut",
                "type": "object"
            },
            "DashboardAccessOut": {
                "properties": {
                    "token": {
                        "example": "appsk_kV3ts5tKPNJN4Dl25cMTfUNdmabxbX0O",
                        "title": "Token",
                        "type": "string"
                    },
                    "url": {
                        "example": "https://app.svix.com/login#key=eyJhcHBJZCI6ICJhcHBfMXRSdFl",
                        "format": "uri",
                        "maxLength": 65536,
                        "minLength": 1,
                        "title": "Url",
                        "type": "string"
                    }
                },
                "required": [
                    "url",
                    "token"
                ],
                "title": "DashboardAccessOut",
                "type": "object"
            },
            "EndpointIn": {
                "properties": {
                    "description": {
                        "default": "",
                        "example": "An example endpoint name",
                        "title": "Description",
                        "type": "string"
                    },
                    "filterTypes": {
                        "example": [
                            "user.signup",
                            "user.deleted"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "title": "Filtertypes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "url": {
                        "example": "https://example.com/webhook/",
                        "format": "uri",
                        "maxLength": 65536,
                        "minLength": 1,
                        "title": "Url",
                        "type": "string"
                    },
                    "version": {
                        "example": 1,
                        "exclusiveMinimum": 0.0,
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "url",
                    "version"
                ],
                "title": "EndpointIn",
                "type": "object"
            },
            "EndpointMessageOut": {
                "properties": {
                    "eventId": {
                        "example": "evt_pNZKtWg8Azow",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventid",
                        "type": "string"
                    },
                    "eventType": {
                        "example": "user.signup",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventtype",
                        "type": "string"
                    },
                    "id": {
                        "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "payload": {
                        "example": {
                            "email": "test@example.com",
                            "username": "test_user"
                        },
                        "title": "Payload",
                        "type": "object"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MessageStatus"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "Timestamp",
                        "type": "string"
                    }
                },
                "required": [
                    "eventType",
                    "payload",
                    "id",
                    "timestamp",
                    "status"
                ],
                "title": "EndpointMessageOut",
                "type": "object"
            },
            "EndpointOut": {
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "title": "Createdat",
                        "type": "string"
                    },
                    "description": {
                        "default": "",
                        "example": "An example endpoint name",
                        "title": "Description",
                        "type": "string"
                    },
                    "filterTypes": {
                        "example": [
                            "user.signup",
                            "user.deleted"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "title": "Filtertypes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "id": {
                        "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "url": {
                        "example": "https://example.com/webhook/",
                        "format": "uri",
                        "maxLength": 65536,
                        "minLength": 1,
                        "title": "Url",
                        "type": "string"
                    },
                    "version": {
                        "example": 1,
                        "exclusiveMinimum": 0.0,
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "url",
                    "version",
                    "id",
                    "createdAt"
                ],
                "title": "EndpointOut",
                "type": "object"
            },
            "EndpointSecretOut": {
                "properties": {
                    "key": {
                        "title": "Key",
                        "type": "string"
                    }
                },
                "required": [
                    "key"
                ],
                "title": "EndpointSecretOut",
                "type": "object"
            },
            "EndpointStats": {
                "properties": {
                    "fail": {
                        "title": "Fail",
                        "type": "integer"
                    },
                    "pending": {
                        "title": "Pending",
                        "type": "integer"
                    },
                    "success": {
                        "title": "Success",
                        "type": "integer"
                    }
                },
                "required": [
                    "success",
                    "pending",
                    "fail"
                ],
                "title": "EndpointStats",
                "type": "object"
            },
            "EventTypeIn": {
                "properties": {
                    "description": {
                        "example": "A user has signed up",
                        "title": "Description",
                        "type": "string"
                    },
                    "name": {
                        "example": "user.signup",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "name"
                ],
                "title": "EventTypeIn",
                "type": "object"
            },
            "EventTypeOut": {
                "properties": {
                    "description": {
                        "example": "A user has signed up",
                        "title": "Description",
                        "type": "string"
                    },
                    "name": {
                        "example": "user.signup",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Name",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "name"
                ],
                "title": "EventTypeOut",
                "type": "object"
            },
            "EventTypeUpdate": {
                "properties": {
                    "description": {
                        "example": "A user has signed up",
                        "title": "Description",
                        "type": "string"
                    }
                },
                "required": [
                    "description"
                ],
                "title": "EventTypeUpdate",
                "type": "object"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "title": "Detail",
                        "type": "array"
                    }
                },
                "title": "HTTPValidationError",
                "type": "object"
            },
            "HttpErrorOut": {
                "properties": {
                    "code": {
                        "title": "Code",
                        "type": "string"
                    },
                    "detail": {
                        "title": "Detail",
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "detail"
                ],
                "title": "HttpError",
                "type": "object"
            },
            "ListResponse_ApplicationOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/ApplicationOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[ApplicationOut]",
                "type": "object"
            },
            "ListResponse_EndpointMessageOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/EndpointMessageOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[EndpointMessageOut]",
                "type": "object"
            },
            "ListResponse_EndpointOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/EndpointOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[EndpointOut]",
                "type": "object"
            },
            "ListResponse_EventTypeOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/EventTypeOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[EventTypeOut]",
                "type": "object"
            },
            "ListResponse_MessageAttemptEndpointOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/MessageAttemptEndpointOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[MessageAttemptEndpointOut]",
                "type": "object"
            },
            "ListResponse_MessageAttemptOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/MessageAttemptOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[MessageAttemptOut]",
                "type": "object"
            },
            "ListResponse_MessageEndpointOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/MessageEndpointOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[MessageEndpointOut]",
                "type": "object"
            },
            "ListResponse_MessageOut_": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/MessageOut"
                        },
                        "title": "Data",
                        "type": "array"
                    },
                    "done": {
                        "title": "Done",
                        "type": "boolean"
                    },
                    "iterator": {
                        "example": "iterator",
                        "title": "Iterator",
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "done"
                ],
                "title": "ListResponse[MessageOut]",
                "type": "object"
            },
            "MessageAttemptEndpointOut": {
                "properties": {
                    "id": {
                        "example": "atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "response": {
                        "example": "{}",
                        "title": "Response",
                        "type": "string"
                    },
                    "responseStatusCode": {
                        "example": 200,
                        "title": "Responsestatuscode",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MessageStatus"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "Timestamp",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "response",
                    "responseStatusCode",
                    "timestamp",
                    "status"
                ],
                "title": "MessageAttemptEndpointOut",
                "type": "object"
            },
            "MessageAttemptOut": {
                "properties": {
                    "endpointId": {
                        "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Endpointid",
                        "type": "string"
                    },
                    "id": {
                        "example": "atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "response": {
                        "example": "{}",
                        "title": "Response",
                        "type": "string"
                    },
                    "responseStatusCode": {
                        "example": 200,
                        "title": "Responsestatuscode",
                        "type": "integer"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MessageStatus"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "Timestamp",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "response",
                    "responseStatusCode",
                    "timestamp",
                    "status",
                    "endpointId"
                ],
                "title": "MessageAttemptOut",
                "type": "object"
            },
            "MessageEndpointOut": {
                "properties": {
                    "createdAt": {
                        "format": "date-time",
                        "title": "Createdat",
                        "type": "string"
                    },
                    "description": {
                        "default": "",
                        "example": "An example endpoint name",
                        "title": "Description",
                        "type": "string"
                    },
                    "filterTypes": {
                        "example": [
                            "user.signup",
                            "user.deleted"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "title": "Filtertypes",
                        "type": "array",
                        "uniqueItems": true
                    },
                    "id": {
                        "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/MessageStatus"
                    },
                    "url": {
                        "example": "https://example.com/webhook/",
                        "format": "uri",
                        "maxLength": 65536,
                        "minLength": 1,
                        "title": "Url",
                        "type": "string"
                    },
                    "version": {
                        "example": 1,
                        "exclusiveMinimum": 0.0,
                        "title": "Version",
                        "type": "integer"
                    }
                },
                "required": [
                    "url",
                    "version",
                    "id",
                    "createdAt",
                    "status"
                ],
                "title": "MessageEndpointOut",
                "type": "object"
            },
            "MessageIn": {
                "properties": {
                    "eventId": {
                        "example": "evt_pNZKtWg8Azow",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventid",
                        "type": "string"
                    },
                    "eventType": {
                        "example": "user.signup",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventtype",
                        "type": "string"
                    },
                    "payload": {
                        "example": {
                            "email": "test@example.com",
                            "username": "test_user"
                        },
                        "title": "Payload",
                        "type": "object"
                    }
                },
                "required": [
                    "eventType",
                    "payload"
                ],
                "title": "MessageIn",
                "type": "object"
            },
            "MessageOut": {
                "properties": {
                    "eventId": {
                        "example": "evt_pNZKtWg8Azow",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventid",
                        "type": "string"
                    },
                    "eventType": {
                        "example": "user.signup",
                        "maxLength": 256,
                        "pattern": "^[a-zA-Z0-9\\-_.]+$",
                        "title": "Eventtype",
                        "type": "string"
                    },
                    "id": {
                        "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                        "title": "Id",
                        "type": "string"
                    },
                    "payload": {
                        "example": {
                            "email": "test@example.com",
                            "username": "test_user"
                        },
                        "title": "Payload",
                        "type": "object"
                    },
                    "timestamp": {
                        "format": "date-time",
                        "title": "Timestamp",
                        "type": "string"
                    }
                },
                "required": [
                    "eventType",
                    "payload",
                    "id",
                    "timestamp"
                ],
                "title": "MessageOut",
                "type": "object"
            },
            "MessageStatus": {
                "description": "The sending status of the message:\n- Success = 0\n- Pending = 1\n- Fail = 2",
                "enum": [
                    0,
                    1,
                    2
                ],
                "title": "MessageStatus",
                "type": "integer"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "type": "string"
                        },
                        "title": "Location",
                        "type": "array"
                    },
                    "msg": {
                        "title": "Message",
                        "type": "string"
                    },
                    "type": {
                        "title": "Error Type",
                        "type": "string"
                    }
                },
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError",
                "type": "object"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "Welcome to the Svix API documentation!\n\nUseful links: [Homepage](https://www.svix.com) | [Support email](mailto:support+docs@svix.com) | [Blog](https://www.svix.com/blog/) | [Slack Community](https://www.svix.com/slack/)\n\n# Introduction\n\nThis is the reference documentation and schemas for the Svix API. For tutorials and other documentation please refer to [the documentation](https://docs.svix.com).\n\n## Main concepts\n\nIn Svix you have four important entities you will be interacting with:\n\n- `messages`: these are the webhooks being sent. They can have contents and a few other properties.\n- `application`: this is where `messages` are sent to. Usually you want to create one application for each of your users.\n- `endpoint`: endpoints are the URLs messages will be sent to. Each application can have multiple `endpoints` and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type).\n- `event-type`: event types are identifiers denoting the type of the message being sent. Event types are primarily used to decide which events are sent to which endpoint.\n\n\n## Authentication\n\nGet your authentication token (`AUTH_TOKEN`) from the [Svix dashboard](https://dashboard.svix.com) and use it as part of the `Authorization` header as such: `Authorization: Bearer ${AUTH_TOKEN}`.\n\n<SecurityDefinitions />\n\n\n## Code samples\n\nThe code samples assume you already have the respective libraries installed and you know how to use them. For the latest information on how to do that, please refer to [the documentation](https://docs.svix.com/).\n\n\n## Cross-Origin Resource Sharing\n\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with [W3C spec](https://www.w3.org/TR/cors/). And that allows cross-domain communication from the browser. All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n",
        "title": "Svix API",
        "version": "1.4",
        "x-logo": {
            "altText": "Svix Logo",
            "url": "https://www.svix.com/static/img/brand-padded.svg"
        }
    },
    "openapi": "3.0.2",
    "paths": {
        "/api/v1/app/": {
            "get": {
                "description": "List of all the organization's applications.",
                "operationId": "list_applications_api_v1_app__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_ApplicationOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Applications",
                "tags": [
                    "Application"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const listResponseApplicationOut = await svix.application.list();"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const listResponseApplicationOut = await svix.application.list();"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "list_response_application_out = svix.application.list()"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "listResponseApplicationOut, err := svixClient.Application.List(nil)"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val listResponseApplicationOut = svix.application.list(FetchOptions())"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ListResponseApplicationOut listResponseApplicationOut = svix.getApplication().list(new FetchOptions())"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix application list "
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "post": {
                "description": "Create a new application.",
                "operationId": "create_application_api_v1_app__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Create Application",
                "tags": [
                    "Application"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.create({\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.create({\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "application_out = svix.application.create(ApplicationIn(\n    uid=\"unique-app-identifier\",\n    name=\"My first application\"\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "applicationOut, err := svixClient.Application.Create(&svix.ApplicationIn{\n    Uid: \"unique-app-identifier\",\n    Name: \"My first application\"\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val applicationOut = svix.application.create(ApplicationIn()\n    .uid(\"unique-app-identifier\"),\n    .name(\"My first application\")\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ApplicationOut applicationOut = svix.getApplication().create(new ApplicationIn()\n    .uid(\"unique-app-identifier\"),\n    .name(\"My first application\")\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix application create '{\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/app/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n}'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/": {
            "delete": {
                "description": "Delete an application.",
                "operationId": "delete_application_api_v1_app__app_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Delete Application",
                "tags": [
                    "Application"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "await svix.application.delete('app_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "await svix.application.delete('app_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "svix.application.delete('app_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "err := svixClient.Application.Delete(\"app_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "svix.application.delete('app_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "svix.getApplication().delete('app_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix application delete 'app_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'DELETE' \\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "get": {
                "description": "Get an application.",
                "operationId": "get_application_api_v1_app__app_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Application",
                "tags": [
                    "Application"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.get('app_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.get('app_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "application_out = svix.application.get('app_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "applicationOut, err := svixClient.Application.Get(\"app_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val applicationOut = svix.application.get('app_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ApplicationOut applicationOut = svix.getApplication().get('app_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix application get 'app_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "put": {
                "description": "Update an application.",
                "operationId": "update_application_api_v1_app__app_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Update Application",
                "tags": [
                    "Application"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.update('app_id', {\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const applicationOut = await svix.application.update('app_id', {\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "application_out = svix.application.update('app_id', ApplicationIn(\n    uid=\"unique-app-identifier\",\n    name=\"My first application\"\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "applicationOut, err := svixClient.Application.Update(\"app_id\", &svix.ApplicationIn{\n    Uid: \"unique-app-identifier\",\n    Name: \"My first application\"\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val applicationOut = svix.application.update('app_id', ApplicationIn()\n    .uid(\"unique-app-identifier\"),\n    .name(\"My first application\")\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ApplicationOut applicationOut = svix.getApplication().update('app_id', new ApplicationIn()\n    .uid(\"unique-app-identifier\"),\n    .name(\"My first application\")\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix application update 'app_id' '{\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'PUT' \\\n  'https://api.svix.com/api/v1/app/{app_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"uid\": \"unique-app-identifier\",\n    \"name\": \"My first application\"\n}'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/endpoint/": {
            "get": {
                "description": "List the application's endpoints.",
                "operationId": "list_endpoints_api_v1_app__app_id__endpoint__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_EndpointOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Endpoints",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const listResponseEndpointOut = await svix.endpoint.list('app_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const listResponseEndpointOut = await svix.endpoint.list('app_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "list_response_endpoint_out = svix.endpoint.list('app_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "listResponseEndpointOut, err := svixClient.Endpoint.List(\"app_id\", nil)"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val listResponseEndpointOut = svix.endpoint.list('app_id', FetchOptions())"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ListResponseEndpointOut listResponseEndpointOut = svix.getEndpoint().list('app_id', new FetchOptions())"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint list 'app_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "post": {
                "description": "Create a new endpoint for the application.",
                "operationId": "create_endpoint_api_v1_app__app_id__endpoint__post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Create Endpoint",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.create('app_id', {\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.create('app_id', {\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "endpoint_out = svix.endpoint.create('app_id', EndpointIn(\n    url=\"https://example.com/webhook/\",\n    version=1,\n    description=\"An example endpoint name\",\n    filter_types=['user.signup', 'user.deleted']\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "endpointOut, err := svixClient.Endpoint.Create(\"app_id\", &svix.EndpointIn{\n    Url: \"https://example.com/webhook/\",\n    Version: 1,\n    Description: \"An example endpoint name\",\n    FilterTypes: [...]string{\"user.signup\", \"user.deleted\"}\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val endpointOut = svix.endpoint.create('app_id', EndpointIn()\n    .url(\"https://example.com/webhook/\"),\n    .version(1),\n    .description(\"An example endpoint name\"),\n    .filterTypes(arrayOf(\"user.signup\", \"user.deleted\"))\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EndpointOut endpointOut = svix.getEndpoint().create('app_id', new EndpointIn()\n    .url(\"https://example.com/webhook/\"),\n    .version(1),\n    .description(\"An example endpoint name\"),\n    .filterTypes(new String[]{\"user.signup\", \"user.deleted\"})\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint create 'app_id' '{\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n}'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/endpoint/{endpoint_id}/": {
            "delete": {
                "description": "Delete an endpoint.",
                "operationId": "delete_endpoint_api_v1_app__app_id__endpoint__endpoint_id___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Delete Endpoint",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "await svix.endpoint.delete('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "await svix.endpoint.delete('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "svix.endpoint.delete('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "err := svixClient.Endpoint.Delete(\"app_id\", \"endpoint_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "svix.endpoint.delete('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "svix.getEndpoint().delete('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint delete 'app_id' 'endpoint_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'DELETE' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "get": {
                "description": "Get an application.",
                "operationId": "get_endpoint_api_v1_app__app_id__endpoint__endpoint_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Endpoint",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.get('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.get('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "endpoint_out = svix.endpoint.get('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "endpointOut, err := svixClient.Endpoint.Get(\"app_id\", \"endpoint_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val endpointOut = svix.endpoint.get('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EndpointOut endpointOut = svix.getEndpoint().get('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint get 'app_id' 'endpoint_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "put": {
                "description": "Update an endpoint.",
                "operationId": "update_endpoint_api_v1_app__app_id__endpoint__endpoint_id___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndpointIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Update Endpoint",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.update('app_id', 'endpoint_id', {\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const endpointOut = await svix.endpoint.update('app_id', 'endpoint_id', {\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "endpoint_out = svix.endpoint.update('app_id', 'endpoint_id', EndpointIn(\n    url=\"https://example.com/webhook/\",\n    version=1,\n    description=\"An example endpoint name\",\n    filter_types=['user.signup', 'user.deleted']\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "endpointOut, err := svixClient.Endpoint.Update(\"app_id\", \"endpoint_id\", &svix.EndpointIn{\n    Url: \"https://example.com/webhook/\",\n    Version: 1,\n    Description: \"An example endpoint name\",\n    FilterTypes: [...]string{\"user.signup\", \"user.deleted\"}\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val endpointOut = svix.endpoint.update('app_id', 'endpoint_id', EndpointIn()\n    .url(\"https://example.com/webhook/\"),\n    .version(1),\n    .description(\"An example endpoint name\"),\n    .filterTypes(arrayOf(\"user.signup\", \"user.deleted\"))\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EndpointOut endpointOut = svix.getEndpoint().update('app_id', 'endpoint_id', new EndpointIn()\n    .url(\"https://example.com/webhook/\"),\n    .version(1),\n    .description(\"An example endpoint name\"),\n    .filterTypes(new String[]{\"user.signup\", \"user.deleted\"})\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint update 'app_id' 'endpoint_id' '{\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'PUT' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"url\": \"https://example.com/webhook/\",\n    \"version\": 1,\n    \"description\": \"An example endpoint name\",\n    \"filterTypes\": [\n        \"user.signup\",\n        \"user.deleted\"\n    ]\n}'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/": {
            "get": {
                "description": "List the message attempts for a particular endpoint.\n\nReturning the message.",
                "operationId": "list_attempted_messages_api_v1_app__app_id__endpoint__endpoint_id__msg__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/MessageStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_EndpointMessageOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Attempted Messages",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/msg/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/": {
            "get": {
                "description": "Get the endpoint's signing secret.\n\nThis is used to verify the authenticity of the webhook.\nFor more information please refer to [the consuming webhooks docs](https://docs.svix.com/consuming-webhooks/).",
                "operationId": "get_endpoint_secret_api_v1_app__app_id__endpoint__endpoint_id__secret__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointSecretOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Endpoint Secret",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const endpointSecretOut = await svix.endpoint.secret('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const endpointSecretOut = await svix.endpoint.secret('app_id', 'endpoint_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "endpoint_secret_out = svix.endpoint.secret('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "endpointSecretOut, err := svixClient.Endpoint.Secret(\"app_id\", \"endpoint_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val endpointSecretOut = svix.endpoint.secret('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EndpointSecretOut endpointSecretOut = svix.getEndpoint().secret('app_id', 'endpoint_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix endpoint secret 'app_id' 'endpoint_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/": {
            "get": {
                "description": "Get basic statistics for the endpoint.",
                "operationId": "get_endpoint_stats_api_v1_app__app_id__endpoint__endpoint_id__stats__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EndpointStats"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Endpoint Stats",
                "tags": [
                    "Endpoint"
                ],
                "x-codeSamples": [
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/endpoint/{endpoint_id}/stats/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/": {
            "get": {
                "description": "List all of the application's messages.",
                "operationId": "list_messages_api_v1_app__app_id__msg__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_MessageOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Messages",
                "tags": [
                    "Message"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const listResponseMessageOut = await svix.message.list('app_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const listResponseMessageOut = await svix.message.list('app_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "list_response_message_out = svix.message.list('app_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "listResponseMessageOut, err := svixClient.Message.List(\"app_id\", nil)"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val listResponseMessageOut = svix.message.list('app_id', FetchOptions())"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ListResponseMessageOut listResponseMessageOut = svix.getMessage().list('app_id', new FetchOptions())"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message list 'app_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "post": {
                "description": "Creates a new message and dispatch it to all of the application's endpoints. The message will be delivered following the organizations delivery and retry policy.\n`eventId` Is an optional global unique ID accross all applications.\nIf a message with the same `eventId` already exists, a 409 conflict error will be returned.",
                "operationId": "create_message_api_v1_app__app_id__msg__post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "413": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Request Entity Too Large"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Create Message",
                "tags": [
                    "Message"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const messageOut = await svix.message.create('app_id', {\n    \"eventType\": \"user.signup\",\n    \"eventId\": \"evt_pNZKtWg8Azow\",\n    \"payload\": {\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const messageOut = await svix.message.create('app_id', {\n    \"eventType\": \"user.signup\",\n    \"eventId\": \"evt_pNZKtWg8Azow\",\n    \"payload\": {\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "message_out = svix.message.create('app_id', MessageIn(\n    event_type=\"user.signup\",\n    event_id=\"evt_pNZKtWg8Azow\",\n    payload={'username': 'test_user', 'email': 'test@example.com'}\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "messageOut, err := svixClient.Message.Create(\"app_id\", &svix.MessageIn{\n    EventType: \"user.signup\",\n    EventId: \"evt_pNZKtWg8Azow\",\n    Payload: map[string]interface{}{\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val messageOut = svix.message.create('app_id', MessageIn()\n    .eventType(\"user.signup\"),\n    .eventId(\"evt_pNZKtWg8Azow\"),\n    .payload(\"\"\"{\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\"\"\")\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "MessageOut messageOut = svix.getMessage().create('app_id', new MessageIn()\n    .eventType(\"user.signup\"),\n    .eventId(\"evt_pNZKtWg8Azow\"),\n    .payload(\"{\" +\n        \"\\\"username\\\": \\\"test_user\\\",\" +\n        \"\\\"email\\\": \\\"test@example.com\\\"\" +\n    \"}\")\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message create 'app_id' '{\n    \"eventType\": \"user.signup\",\n    \"eventId\": \"evt_pNZKtWg8Azow\",\n    \"payload\": {\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"eventType\": \"user.signup\",\n    \"eventId\": \"evt_pNZKtWg8Azow\",\n    \"payload\": {\n        \"username\": \"test_user\",\n        \"email\": \"test@example.com\"\n    }\n}'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/": {
            "get": {
                "description": "Get a message by its ID or eventID.",
                "operationId": "get_message_api_v1_app__app_id__msg__msg_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Message",
                "tags": [
                    "Message"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const messageOut = await svix.message.get('app_id', 'msg_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const messageOut = await svix.message.get('app_id', 'msg_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "message_out = svix.message.get('app_id', 'msg_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "messageOut, err := svixClient.Message.Get(\"app_id\", \"msg_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val messageOut = svix.message.get('app_id', 'msg_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "MessageOut messageOut = svix.getMessage().get('app_id', 'msg_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message get 'app_id' 'msg_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/attempt/": {
            "get": {
                "description": "`msg_id`: Use a message id or a message `eventId`",
                "operationId": "list_attempts_api_v1_app__app_id__msg__msg_id__attempt__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/MessageStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_MessageAttemptOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Attempts",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const listResponseMessageAttemptOut = await svix.messageAttempt.list('app_id', 'msg_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const listResponseMessageAttemptOut = await svix.messageAttempt.list('app_id', 'msg_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "list_response_message_attempt_out = svix.message_attempt.list('app_id', 'msg_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "listResponseMessageAttemptOut, err := svixClient.MessageAttempt.List(\"app_id\", \"msg_id\", nil)"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val listResponseMessageAttemptOut = svix.messageAttempt.list('app_id', 'msg_id', FetchOptionsMessageAttempt())"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ListResponseMessageAttemptOut listResponseMessageAttemptOut = svix.getMessageAttempt().list('app_id', 'msg_id', new FetchOptionsMessageAttempt())"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message-attempt list 'app_id' 'msg_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/": {
            "get": {
                "description": "`msg_id`: Use a message id or a message `eventId`",
                "operationId": "get_attempt_api_v1_app__app_id__msg__msg_id__attempt__attempt_id___get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attempt_id",
                        "required": true,
                        "schema": {
                            "example": "atmpt_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Attempt Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageAttemptOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Attempt",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const messageAttemptOut = await svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const messageAttemptOut = await svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "message_attempt_out = svix.message_attempt.get('app_id', 'msg_id', 'attempt_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "messageAttemptOut, err := svixClient.MessageAttempt.Get(\"app_id\", \"msg_id\", \"attempt_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val messageAttemptOut = svix.messageAttempt.get('app_id', 'msg_id', 'attempt_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "MessageAttemptOut messageAttemptOut = svix.getMessageAttempt().get('app_id', 'msg_id', 'attempt_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message-attempt get 'app_id' 'msg_id' 'attempt_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/endpoint/": {
            "get": {
                "description": "`msg_id`: Use a message id or a message `eventId`",
                "operationId": "list_attempted_destinations_api_v1_app__app_id__msg__msg_id__endpoint__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_MessageEndpointOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Attempted Destinations",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/": {
            "get": {
                "description": "List the message attempts for a particular endpoint.\n\nReturning the endpint.",
                "operationId": "list_attempts_for_endpoint_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__attempt__get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/MessageStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_MessageAttemptEndpointOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Attempts For Endpoint",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/attempt/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/": {
            "post": {
                "description": "Resend a message to the specified endpoint.",
                "operationId": "resend_webhook_api_v1_app__app_id__msg__msg_id__endpoint__endpoint_id__resend__post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "endpoint_id",
                        "required": true,
                        "schema": {
                            "example": "ep_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Endpoint Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "msg_id",
                        "required": true,
                        "schema": {
                            "description": "The message's ID or eventID",
                            "example": "msg_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "Msg Id",
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Resend Webhook",
                "tags": [
                    "Message Attempt"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "await svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "await svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "svix.message_attempt.resend('app_id', 'msg_id', 'endpoint_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "err := svixClient.MessageAttempt.Resend(\"app_id\", \"msg_id\", \"endpoint_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "svix.messageAttempt.resend('app_id', 'msg_id', 'endpoint_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "svix.getMessageAttempt().resend('app_id', 'msg_id', 'endpoint_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix message-attempt resend 'app_id' 'msg_id' 'endpoint_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/auth/dashboard-access/{app_id}/": {
            "post": {
                "description": "Use this function to get magic links (and authentication codes) for connecting your users to the management UIs.",
                "operationId": "get_dashboard_access_api_v1_auth_dashboard_access__app_id___post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "app_id",
                        "required": true,
                        "schema": {
                            "description": "The application's ID or UID",
                            "example": "app_1srOrx2ZWZBpBUvZwXKQmoEYga2",
                            "title": "App Id",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardAccessOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Get Dashboard Access",
                "tags": [
                    "Authentication"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const dashboardAccessOut = await svix.authentication.get('app_id');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const dashboardAccessOut = await svix.authentication.get('app_id');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "dashboard_access_out = svix.authentication.get('app_id')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "dashboardAccessOut, err := svixClient.Authentication.Get(\"app_id\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val dashboardAccessOut = svix.authentication.get('app_id')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "DashboardAccessOut dashboardAccessOut = svix.getAuthentication().get('app_id')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix authentication get 'app_id'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/auth/dashboard-access/{app_id}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/auth/logout/": {
            "post": {
                "description": "Logout an app token.\n\nTrying to log out other tokens will fail.",
                "operationId": "logout_api_v1_auth_logout__post",
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Logout",
                "tags": [
                    "Authentication"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "await svix.authentication.logout();"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "await svix.authentication.logout();"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "svix.authentication.logout()"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "err := svixClient.Authentication.Logout()"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "svix.authentication.logout()"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "svix.getAuthentication().logout()"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix authentication logout "
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/auth/logout/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        },
        "/api/v1/event-type/": {
            "get": {
                "description": "Return the list of event types.",
                "operationId": "list_event_types_api_v1_event_type__get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "iterator",
                        "required": false,
                        "schema": {
                            "title": "Iterator",
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "title": "Limit",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListResponse_EventTypeOut_"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "List Event Types",
                "tags": [
                    "Event Type"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const listResponseEventTypeOut = await svix.eventType.list();"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const listResponseEventTypeOut = await svix.eventType.list();"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "list_response_event_type_out = svix.event_type.list()"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "listResponseEventTypeOut, err := svixClient.EventType.List(nil)"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val listResponseEventTypeOut = svix.eventType.list(FetchOptions())"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "ListResponseEventTypeOut listResponseEventTypeOut = svix.getEventType().list(new FetchOptions())"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix event-type list "
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/event-type/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "post": {
                "description": "Create an event type.",
                "operationId": "create_event_type_api_v1_event_type__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventTypeIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventTypeOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Create Event Type",
                "tags": [
                    "Event Type"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const eventTypeOut = await svix.eventType.create({\n    \"description\": \"A user has signed up\",\n    \"name\": \"user.signup\"\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const eventTypeOut = await svix.eventType.create({\n    \"description\": \"A user has signed up\",\n    \"name\": \"user.signup\"\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "event_type_out = svix.event_type.create(EventTypeIn(\n    description=\"A user has signed up\",\n    name=\"user.signup\"\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "eventTypeOut, err := svixClient.EventType.Create(&svix.EventTypeIn{\n    Description: \"A user has signed up\",\n    Name: \"user.signup\"\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val eventTypeOut = svix.eventType.create(EventTypeIn()\n    .description(\"A user has signed up\"),\n    .name(\"user.signup\")\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EventTypeOut eventTypeOut = svix.getEventType().create(new EventTypeIn()\n    .description(\"A user has signed up\"),\n    .name(\"user.signup\")\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix event-type create '{\n    \"description\": \"A user has signed up\",\n    \"name\": \"user.signup\"\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'POST' \\\n  'https://api.svix.com/api/v1/event-type/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"description\": \"A user has signed up\",\n    \"name\": \"user.signup\"\n}'"
                    }
                ]
            }
        },
        "/api/v1/event-type/{event_type_name}/": {
            "delete": {
                "description": "Delete an event type.",
                "operationId": "delete_event_type_api_v1_event_type__event_type_name___delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "event_type_name",
                        "required": true,
                        "schema": {
                            "title": "Event Type Name",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Delete Event Type",
                "tags": [
                    "Event Type"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "await svix.eventType.delete('event_type_name');"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "await svix.eventType.delete('event_type_name');"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "svix.event_type.delete('event_type_name')"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "err := svixClient.EventType.Delete(\"event_type_name\")"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "svix.eventType.delete('event_type_name')"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "svix.getEventType().delete('event_type_name')"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix event-type delete 'event_type_name'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'DELETE' \\\n  'https://api.svix.com/api/v1/event-type/{event_type_name}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            },
            "put": {
                "description": "Update an event type.",
                "operationId": "update_event_type_api_v1_event_type__event_type_name___put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "event_type_name",
                        "required": true,
                        "schema": {
                            "title": "Event Type Name",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventTypeUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventTypeOut"
                                }
                            }
                        },
                        "description": "Successful Response"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HttpErrorOut"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        },
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "summary": "Update Event Type",
                "tags": [
                    "Event Type"
                ],
                "x-codeSamples": [
                    {
                        "label": "JavaScript",
                        "lang": "JavaScript",
                        "source": "const eventTypeOut = await svix.eventType.update('event_type_name', {\n    \"description\": \"A user has signed up\"\n});"
                    },
                    {
                        "label": "TypeScript",
                        "lang": "JavaScript",
                        "source": "const eventTypeOut = await svix.eventType.update('event_type_name', {\n    \"description\": \"A user has signed up\"\n});"
                    },
                    {
                        "label": "Python",
                        "lang": "Python",
                        "source": "event_type_out = svix.event_type.update('event_type_name', EventTypeUpdate(\n    description=\"A user has signed up\"\n))"
                    },
                    {
                        "label": "Go",
                        "lang": "Go",
                        "source": "eventTypeOut, err := svixClient.EventType.Update(\"event_type_name\", &svix.EventTypeUpdate{\n    Description: \"A user has signed up\"\n})"
                    },
                    {
                        "label": "Kotlin",
                        "lang": "Kotlin",
                        "source": "val eventTypeOut = svix.eventType.update('event_type_name', EventTypeUpdate()\n    .description(\"A user has signed up\")\n)"
                    },
                    {
                        "label": "Java",
                        "lang": "Java",
                        "source": "EventTypeOut eventTypeOut = svix.getEventType().update('event_type_name', new EventTypeUpdate()\n    .description(\"A user has signed up\")\n)"
                    },
                    {
                        "label": "CLI",
                        "lang": "Shell",
                        "source": "svix event-type update 'event_type_name' '{\n    \"description\": \"A user has signed up\"\n}'"
                    },
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'PUT' \\\n  'https://api.svix.com/api/v1/event-type/{event_type_name}/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'\n  -d '{\n    \"description\": \"A user has signed up\"\n}'"
                    }
                ]
            }
        },
        "/api/v1/health/": {
            "get": {
                "description": "Verify the API server is up and running.",
                "operationId": "health_api_v1_health__get",
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    }
                },
                "summary": "Health",
                "tags": [
                    "Health"
                ],
                "x-codeSamples": [
                    {
                        "label": "cURL",
                        "lang": "Shell",
                        "source": "curl -X 'GET' \\\n  'https://api.svix.com/api/v1/health/' \\\n  -H 'Authorization: Bearer AUTH_TOKEN' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json'"
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "description": "Applications are where messages are sent to. In most cases you would wantto have one application for each of your users.",
            "name": "Application"
        },
        {
            "description": "Messages are the webhook events being sent.",
            "name": "Message"
        },
        {
            "description": "Attempts to deliver `Message`s to `Endpoint`s.",
            "name": "Message Attempt"
        },
        {
            "description": "Endpoints are the URLs messages will be sent to. Each application can have multiple endpoints and each message sent to that application will be sent to all of them (unless they are not subscribed to the sent event type).",
            "name": "Endpoint"
        },
        {
            "description": "Event types are identifiers denoting the type of message being sent. Event types are primarily used to decide which events are sent to which endpoint.",
            "name": "Event Type"
        },
        {
            "description": "Easily give your users access to our pre-built management UI.",
            "name": "Authentication"
        },
        {
            "description": "Health checks for the API.",
            "name": "Health"
        }
    ],
    "x-tagGroups": [
        {
            "name": "General",
            "tags": [
                "Application",
                "Event Type"
            ]
        },
        {
            "name": "Application specific",
            "tags": [
                "Authentication",
                "Endpoint",
                "Message",
                "Message Attempt"
            ]
        },
        {
            "name": "Utility",
            "tags": [
                "Health"
            ]
        }
    ]
}